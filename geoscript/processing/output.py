class Output(object):    
    '''
    Base class for outputs generated by a process. Subclasses of this class are used
    to define the values needed to configure how outputs are produced and returned by 
    the run() method of the process
    '''

    def __init__(self, name="", description=""):
        self.name = name
        self.description = description
        #the value of an output might be the resulting data directly or something 
        #representing its location.
        #For instance, for a file based output, it might be the filepath to it.
        self.value = None                

    def __str__(self):
        return self.name + " <" + self.__class__.__name__ +">"
    

    def serialize(self):
        return self.__class__.__name__ + "|" + self.name + "|" + self.description

    def setValue(self, value):
        ##TODO: check for wrong values. Now, all values are ok                
        self.value = value
        return True

class OutputRaster(Output):
    pass

class OutputVector(Output):
    pass

class OutputTable(Output):
    pass
    
class OutputNumber(Output):
    pass


def getoutputfromstring(s):
    classes = [OutputRaster, OutputVector, OutputTable, OutputNumber]
    for clazz in classes:
        if s.startswith(clazz().__class__.__name__):
            tokens = s[len(clazz().__class__.__name__)+1:].split("|")            
            return clazz(tokens[0], tokens[1])
            
